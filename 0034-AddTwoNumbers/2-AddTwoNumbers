**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode sum = new ListNode();
        ListNode head = sum;
        int carry = 0 ; 
        while(l1 != null && l2 != null){
            ListNode newNode = new ListNode() ;
            sum.next = newNode ;
            newNode.val = l1.val + l2.val + carry ;
            carry = newNode.val / 10 ;
            newNode.val = newNode.val % 10 ;
            l1 = l1.next ;
            l2 = l2.next ;
            sum = sum.next ;
        }
        while(l1 != null){
            ListNode newNode = new ListNode() ;
            sum.next = newNode ;
            newNode.val = l1.val + carry ;
            carry = newNode.val / 10 ;
            newNode.val = newNode.val % 10 ;
            l1 = l1.next ;
            sum = sum.next ;
        }
        while(l2 != null){
            ListNode newNode = new ListNode() ;
            sum.next = newNode ;
            newNode.val = l2.val + carry ;
            carry = newNode.val / 10 ;
            newNode.val = newNode.val % 10 ;
            l2 = l2.next ;
            sum = sum.next ;
        }
        if(carry == 1){
            ListNode newNode = new ListNode() ;
            sum.next = newNode ;
            newNode.val = carry ;
        }
        
    return head.next;
    }
}
