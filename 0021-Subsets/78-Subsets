class Solution {
    public List<List<Integer>> subsets(int[] nums) {
    List<List<Integer>> result = new ArrayList<>();
    dfs( result , new ArrayList<>() , nums , 0 );
    return result;
    }
// index start means what our subsets are beginning with, in this case, it will be 0
// subset refers our current subset, it is initiated as empty list
void dfs(List<List<Integer>> result, List<Integer> subset, int[] nums, int start) {
    // create a copy and add into result
    result.add(new ArrayList<>(subset));
    
    for (int i = start; i < nums.length; i++) {
        subset.add(nums[i]);
        dfs(result, subset, nums, i + 1);
        subset.remove(subset.size() - 1);
    }
}

}
